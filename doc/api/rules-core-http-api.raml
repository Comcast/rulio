#%RAML 0.8

#% Generated by rulesapi

title: Rules System Core (Primitive) API
protocols: [ HTTP ]
version: 0.0.7
mediaType: application/json
documentation:
  - title: Overview
    content: |
      <!--
      
      Copyright 2015 Comcast Cable Communications Management, LLC
      
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
      
        http://www.apache.org/licenses/LICENSE-2.0
      
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
      
      End Copyright -->
      
      
      This API is a simple HTTP rendering of the primtive API, which can be
      packaged up as a REST API, [0MQ](http://zeromq.org/) API, Web sockets
      API, etc.
      
      This documentation was generated by `rulesapi/rulesapi`.
      
/version:
  post:
    description: |
      Report the version of the endpoint
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/version"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "go": "go1.6",
                "version": "0.0.9"
              }
/sys/util/nowsecs:
  post:
    description: |
      Report the time that the endpoint thinks it is
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/util/nowsecs"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "secs": 1.472056274e+09
              }
/sys/util/match:
  post:
    description: |
      Match a fact against a pattern
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "fact": {"type":"string","description":"A fact in JSON"},
              "pattern": {"type":"string","description":"A pattern in JSON"}
            }
          }
        example: |
          {
            "fact": {
              "kids": [
                "bart",
                "lisa"
              ],
              "person": "homer"
            },
            "pattern": {
              "kids": [
                "?kid"
              ],
              "person": "homer"
            },
            "uri": "/sys/util/match"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "?kid": "bart"
                },
                {
                  "?kid": "lisa"
                }
              ]
/sys/util/js:
  post:
    description: |
      Evaluate some in-process Javascript
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "code": {"type":"string","description":"The Javascript"}
            }
          }
        example: |
          {
            "code": "1+2",
            "uri": "/sys/util/js"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "result": 3
              }
/sys/util/batch:
  post:
    description: |
      Evaluate a batch of requests
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "requests": {"type":"string","description":"Array of requests, each of which should have a 'uri'"}
            }
          }
        example: |
          {
            "requests": [
              {
                "uri": "/sys/util/nowsecs"
              },
              {
                "code": "1+2",
                "uri": "/sys/util/js"
              }
            ],
            "uri": "/sys/util/batch"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "secs": 1.472056274e+09
                },
                {
                  "result": 3
                }
              ]
/sys/cachedlocations:
  post:
    description: |
      Get all cached locations
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/cachedlocations"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "locations": [
                  "here",
                  "CreatedLocation",
                  "grandpa"
                ]
              }
/loc/admin/size:
  post:
    description: |
      Gets the number of facts (including rules) in the location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"}
            }
          }
        example: |
          {
            "location": "here",
            "uri": "/loc/admin/size"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "size": 0
              }
/loc/facts/add:
  post:
    description: |
      Add a fact to the given location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "fact": {"type":"string","description":"The fact in JSON"}
            }
          }
        example: |
          {
            "fact": {
              "likes": "beer",
              "person": "homer"
            },
            "location": "here",
            "uri": "/loc/facts/add"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": "b8ecadf9-e7d2-4b79-b9e4-436269285c08"
              }
/loc/facts/search:
  post:
    description: |
      Search (internal) facts at given location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "fact": {"type":"string","description":"The fact in JSON"},
              "location": {"type":"string","description":"The target location"}
            }
          }
        example: |
          {
            "location": "here",
            "pattern": {
              "likes": "?what",
              "person": "?who"
            },
            "uri": "/loc/facts/search"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "Checked": 1,
                "Elapsed": 424613,
                "Expired": 0,
                "Found": [
                  {
                    "Bindingss": [
                      {
                        "?what": "beer",
                        "?who": "homer"
                      }
                    ],
                    "Id": "b8ecadf9-e7d2-4b79-b9e4-436269285c08",
                    "Js": "{\\"likes\\":\\"beer\\",\\"person\\":\\"homer\\"}"
                  }
                ]
              }
/loc/facts/query:
  post:
    description: |
      Query facts at given location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "query": {"type":"string","description":"The query (as in a rule condition) in JSON"}
            }
          }
        example: |
          {
            "location": "here",
            "query": {
              "and": [
                {
                  "pattern": {
                    "likes": "?what",
                    "person": "?who"
                  }
                },
                {
                  "code": "what.length \u003e 2"
                }
              ]
            },
            "uri": "/loc/facts/query"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "Bss": [
                  {
                    "?what": "beer",
                    "?who": "homer"
                  }
                ],
                "Checked": 0,
                "Elapsed": 1.504273e+06
              }
/loc/rules/add:
  post:
    description: |
      Add a new rule to the given location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "id": {"type":"string","description":"Optional id"},
              "rule": {"type":"string","description":"The rule in JSON"}
            }
          }
        example: |
          {
            "id": "rule42",
            "location": "here",
            "rule": {
              "action": {
                "code": "console.log(\\"Deliver some \\" + what + \\" to \\" + there);"
              },
              "condition": {
                "pattern": {
                  "likes": "?what",
                  "person": "?who"
                }
              },
              "when": {
                "pattern": {
                  "arrived": "?there",
                  "person": "?who"
                }
              }
            },
            "uri": "/loc/rules/add"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": "rule42"
              }
/loc/rules/list:
  post:
    description: |
      Get the known rules
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"}
            }
          }
        example: |
          {
            "location": "here",
            "uri": "/loc/rules/list"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "ids": [
                  "rule42"
                ]
              }
/loc/events/ingest:
  post:
    description: |
      Submit an event for processing
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "event": {"type":"string","description":"The event in JSON"},
              "externalFactsTimeout": {"type":"string","description":"Optional timeout; syntax is from 'http://golang.org/pkg/time/#ParseDuration'"}
            }
          }
        example: |
          {
            "event": {
              "arrived": "home",
              "person": "homer"
            },
            "location": "here",
            "uri": "/loc/events/ingest"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "id": "6647ad49-424e-4fcf-a7ec-be8c54ddbe81",
                "result": {
                  "children": [
                    {
                      "DoneWork": {
                        "disposition": {
                          "msg": "complete",
                          "status": "complete"
                        }
                      },
                      "bindingss": [
                        {
                          "?event": {
                            "arrived": "home",
                            "person": "homer"
                          },
                          "?location": "here",
                          "?ruleId": "rule42",
                          "?there": "home",
                          "?who": "homer"
                        }
                      ],
                      "children": [
                        {
                          "bindings": {
                            "?event": {
                              "arrived": "home",
                              "person": "homer"
                            },
                            "?location": "here",
                            "?ruleId": "rule42",
                            "?there": "home",
                            "?who": "homer"
                          },
                          "children": [
                            {
                              "action": {
                                "code": "console.log(\\"Deliver some \\" + what + \\" to \\" + there);",
                                "endpoint": "javascript",
                                "subvars": true
                              },
                              "bindings": {
                                "?event": {
                                  "arrived": "home",
                                  "person": "homer"
                                },
                                "?location": "here",
                                "?ruleId": "rule42",
                                "?there": "home",
                                "?what": "beer",
                                "?who": "homer"
                              },
                              "disposition": {
                                "msg": "complete",
                                "status": "complete"
                              }
                            }
                          ],
                          "disposition": {
                            "msg": "complete",
                            "status": "complete"
                          }
                        }
                      ],
                      "disposition": {
                        "msg": "complete",
                        "status": "complete"
                      },
                      "rule": {
                        "actions": [
                          {
                            "code": "console.log(\\"Deliver some \\" + what + \\" to \\" + there);",
                            "endpoint": "javascript",
                            "subvars": true
                          }
                        ],
                        "condition": {
                          "pattern": {
                            "likes": "?what",
                            "person": "?who"
                          }
                        },
                        "expires": 0,
                        "id": "rule42",
                        "once": false,
                        "props": null,
                        "when": {
                          "pattern": {
                            "arrived": "?there",
                            "person": "?who"
                          }
                        }
                      }
                    }
                  ],
                  "disposition": {
                    "msg": "complete",
                    "status": "complete"
                  },
                  "event": {
                    "arrived": "home",
                    "person": "homer"
                  },
                  "values": [
                    null
                  ]
                }
              }
/loc/parents:
  post:
    description: |
      Get or set a location's parents
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "set": {"type":"string","description":"JSON representing an array of strings to set the parents; if not provided, get the current parents"}
            }
          }
        example: |
          {
            "location": "here",
            "set": "[\\"grandpa\\"]",
            "uri": "/loc/parents"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "result": [
                  "grandpa"
                ]
              }
/loc/events/retry:
  post:
    description: |
      Retry event processing
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "work": {"type":"string","description":"The event work as returned by 'ingest'"}
            }
          }
/sys/admin/timers/names:
  post:
    description: |
      Get an array of known timers
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/admin/timers/names"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              [
                "RunJavascript",
                "SystemQuery",
                "SystemAddRule",
                "EnableRule",
                "ListRules",
                "SearchRules",
                "SystemProcessEvent",
                "Clear",
                "GetParents",
                "AddFact",
                "SystemSearchFacts",
                "SystemListRules",
                "IndexedState.Load",
                "SystemAddFact",
                "TermIndex",
                "ExecAction",
                "SystemRemRule",
                "LocationRunJavascript",
                "SystemOpenLocation",
                "IndexedState.Search",
                "CodeQuery.Exec",
                "Query",
                "ExecQuery",
                "IndexedState.FindRules",
                "IndexedState.Rem",
                "SystemRunJavascript",
                "SetParents",
                "ProcessRequest",
                "ServeHTTP",
                "searchFacts",
                "AddRule",
                "RemRule",
                "Delete"
              ]
/sys/admin/timers/get:
  post:
    description: |
      Get a timer
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "limit": {"type":"string","description":"Optional max number to return"},
              "name": {"type":"string","description":"Timer name"},
              "after": {"type":"string","description":"Optional seq integer (defaults to -1)"}
            }
          }
        example: |
          {
            "limit": 3,
            "name": "ProcessRequest",
            "uri": "/sys/admin/timers/get"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "Elapsed": 5.073008e+06,
                  "Seq": 333,
                  "Timestamp": "2016-08-24T16:31:14.661Z"
                },
                {
                  "Elapsed": 3.36585e+06,
                  "Seq": 334,
                  "Timestamp": "2016-08-24T16:31:14.666Z"
                },
                {
                  "Elapsed": 44646,
                  "Seq": 335,
                  "Timestamp": "2016-08-24T16:31:14.667Z"
                }
              ]
/loc/rules/disable:
  post:
    description: |
      Disable a rule
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "id": {"type":"string","description":"The rule ID as returned by a `/rules/add`"}
            }
          }
        example: |
          {
            "id": "rule42",
            "location": "here",
            "name": "ServeHTTP",
            "uri": "/loc/rules/disable"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "disabled": "rule42"
              }
/loc/rules/enable:
  post:
    description: |
      Enbale a rule
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "id": {"type":"string","description":"The rule ID as returned by a `/rules/add`"},
              "location": {"type":"string","description":"The target location"}
            }
          }
        example: |
          {
            "id": "rule42",
            "location": "here",
            "name": "ServeHTTP",
            "uri": "/loc/rules/enable"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "enabled": "rule42"
              }
/loc/rules/enabled:
  post:
    description: |
      Report whether a rule is enabled
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "id": {"type":"string","description":"The rule ID as returned by a `/rules/add`"}
            }
          }
        example: |
          {
            "id": "rule42",
            "location": "here",
            "name": "ServeHTTP",
            "uri": "/loc/rules/enabled"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "enabled": true,
                "ruleId": "rule42"
              }
/loc/rules/rem:
  post:
    description: |
      Remove a rule from the given location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"},
              "id": {"type":"string","description":"The rule ID as returned by a `/rules/add`"}
            }
          }
        example: |
          {
            "id": "rule42",
            "location": "here",
            "name": "ServeHTTP",
            "uri": "/loc/rules/rem"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "given": "rule42",
                "removed": "rule42"
              }
/loc/util/js:
  post:
    description: |
      Evaluate some in-process Javascript within a location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "code": {"type":"string","description":"The Javascript to execute"}
            }
          }
        example: |
          {
            "code": "Env.Location",
            "location": "here",
            "uri": "/loc/util/js"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "result": "here"
              }
/loc/admin/create:
  post:
    description: |
      Create a location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The name of the location to create"}
            }
          }
        example: |
          {
            "location": "CreatedLocation",
            "uri": "/loc/admin/create"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "okay"
              }
/loc/admin/delete:
  post:
    description: |
      Delete a location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The name of the location to delete"}
            }
          }
        example: |
          {
            "location": "CreatedLocation",
            "uri": "/loc/admin/delete"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "okay"
              }
/loc/admin/stats:
  post:
    description: |
      Get basic stats for the given location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"}
            }
          }
        example: |
          {
            "location": "here",
            "uri": "/loc/admin/stats"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "ActionExecs": 0,
                "AddFacts": 10,
                "AddRules": 10,
                "ErrorCount": 0,
                "GetEventHistorys": 0,
                "GetFacts": 0,
                "GetRules": 0,
                "ListLocations": 0,
                "ListRules": 10,
                "NewLocations": 0,
                "ProcessEvents": 0,
                "RemFacts": 0,
                "RemRules": 10,
                "SearchFacts": 40,
                "SearchRules": 10,
                "TotalCalls": 165,
                "TotalTime": 1.44152386e+08,
                "UpdateRules": 0
              }
/loc/admin/clear:
  post:
    description: |
      Clear all (internal) state at the given location
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "location": {"type":"string","description":"The target location"}
            }
          }
        example: |
          {
            "location": "here",
            "uri": "/loc/admin/clear"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "okay"
              }
/sys/runtime:
  post:
    description: |
      Get a huge pile of Go runtime stats
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/runtime"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "cgos": 1,
                "goroutines": 12,
                "goversion": "go1.6",
                "memstats": {
                  "Alloc": 4.007392e+06,
                  "BuckHashSys": 1.490418e+06,
                  "BySize": [
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 0
                    },
                    {
                      "Frees": 229256,
                      "Mallocs": 231038,
                      "Size": 8
                    },
                    {
                      "Frees": 795184,
                      "Mallocs": 803606,
                      "Size": 16
                    },
                    {
                      "Frees": 87494,
                      "Mallocs": 95791,
                      "Size": 32
                    },
                    {
                      "Frees": 51156,
                      "Mallocs": 53081,
                      "Size": 48
                    },
                    {
                      "Frees": 20269,
                      "Mallocs": 21679,
                      "Size": 64
                    },
                    {
                      "Frees": 24435,
                      "Mallocs": 24715,
                      "Size": 80
                    },
                    {
                      "Frees": 48565,
                      "Mallocs": 50046,
                      "Size": 96
                    },
                    {
                      "Frees": 17765,
                      "Mallocs": 17964,
                      "Size": 112
                    },
                    {
                      "Frees": 2604,
                      "Mallocs": 2637,
                      "Size": 128
                    },
                    {
                      "Frees": 3947,
                      "Mallocs": 3992,
                      "Size": 144
                    },
                    {
                      "Frees": 4276,
                      "Mallocs": 4360,
                      "Size": 160
                    },
                    {
                      "Frees": 17141,
                      "Mallocs": 17282,
                      "Size": 176
                    },
                    {
                      "Frees": 349,
                      "Mallocs": 365,
                      "Size": 192
                    },
                    {
                      "Frees": 12768,
                      "Mallocs": 12909,
                      "Size": 208
                    },
                    {
                      "Frees": 4537,
                      "Mallocs": 4571,
                      "Size": 224
                    },
                    {
                      "Frees": 4007,
                      "Mallocs": 4051,
                      "Size": 240
                    },
                    {
                      "Frees": 2054,
                      "Mallocs": 2081,
                      "Size": 256
                    },
                    {
                      "Frees": 20805,
                      "Mallocs": 21005,
                      "Size": 288
                    },
                    {
                      "Frees": 9420,
                      "Mallocs": 9499,
                      "Size": 320
                    },
                    {
                      "Frees": 21385,
                      "Mallocs": 22627,
                      "Size": 352
                    },
                    {
                      "Frees": 454,
                      "Mallocs": 512,
                      "Size": 384
                    },
                    {
                      "Frees": 6815,
                      "Mallocs": 6915,
                      "Size": 416
                    },
                    {
                      "Frees": 9211,
                      "Mallocs": 9262,
                      "Size": 448
                    },
                    {
                      "Frees": 16381,
                      "Mallocs": 16509,
                      "Size": 480
                    },
                    {
                      "Frees": 555,
                      "Mallocs": 562,
                      "Size": 512
                    },
                    {
                      "Frees": 367,
                      "Mallocs": 377,
                      "Size": 576
                    },
                    {
                      "Frees": 50,
                      "Mallocs": 57,
                      "Size": 640
                    },
                    {
                      "Frees": 1483,
                      "Mallocs": 1498,
                      "Size": 704
                    },
                    {
                      "Frees": 103,
                      "Mallocs": 110,
                      "Size": 768
                    },
                    {
                      "Frees": 508,
                      "Mallocs": 511,
                      "Size": 896
                    },
                    {
                      "Frees": 190,
                      "Mallocs": 207,
                      "Size": 1024
                    },
                    {
                      "Frees": 16078,
                      "Mallocs": 16220,
                      "Size": 1152
                    },
                    {
                      "Frees": 41,
                      "Mallocs": 47,
                      "Size": 1280
                    },
                    {
                      "Frees": 574,
                      "Mallocs": 600,
                      "Size": 1408
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 1536
                    },
                    {
                      "Frees": 8,
                      "Mallocs": 17,
                      "Size": 1664
                    },
                    {
                      "Frees": 96,
                      "Mallocs": 112,
                      "Size": 2048
                    },
                    {
                      "Frees": 20,
                      "Mallocs": 26,
                      "Size": 2304
                    },
                    {
                      "Frees": 1,
                      "Mallocs": 3,
                      "Size": 2560
                    },
                    {
                      "Frees": 187,
                      "Mallocs": 199,
                      "Size": 2816
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 3072
                    },
                    {
                      "Frees": 2,
                      "Mallocs": 10,
                      "Size": 3328
                    },
                    {
                      "Frees": 44,
                      "Mallocs": 53,
                      "Size": 4096
                    },
                    {
                      "Frees": 10,
                      "Mallocs": 16,
                      "Size": 4608
                    },
                    {
                      "Frees": 1,
                      "Mallocs": 14,
                      "Size": 5376
                    },
                    {
                      "Frees": 2066,
                      "Mallocs": 2087,
                      "Size": 6144
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 6400
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 2,
                      "Size": 6656
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 6912
                    },
                    {
                      "Frees": 159,
                      "Mallocs": 160,
                      "Size": 8192
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 8448
                    },
                    {
                      "Frees": 6,
                      "Mallocs": 6,
                      "Size": 8704
                    },
                    {
                      "Frees": 3,
                      "Mallocs": 3,
                      "Size": 9472
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 10496
                    },
                    {
                      "Frees": 1,
                      "Mallocs": 1,
                      "Size": 12288
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 13568
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 14080
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 16384
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 0,
                      "Size": 16640
                    },
                    {
                      "Frees": 0,
                      "Mallocs": 1,
                      "Size": 17664
                    }
                  ],
                  "DebugGC": false,
                  "EnableGC": true,
                  "Frees": 1.477868e+06,
                  "GCCPUFraction": 0.00026430742922837385,
                  "GCSys": 286720,
                  "HeapAlloc": 4.007392e+06,
                  "HeapIdle": 1.949696e+06,
                  "HeapInuse": 4.898816e+06,
                  "HeapObjects": 26617,
                  "HeapReleased": 1.015808e+06,
                  "HeapSys": 6.848512e+06,
                  "LastGC": 1.472056274691259e+18,
                  "Lookups": 45,
                  "MCacheInuse": 4800,
                  "MCacheSys": 16384,
                  "MSpanInuse": 52920,
                  "MSpanSys": 65536,
                  "Mallocs": 1.504485e+06,
                  "NextGC": 4.63492e+06,
                  "NumGC": 141,
                  "OtherSys": 1.194758e+06,
                  "PauseEnd": [
                    1.472055454059436e+18,
                    1.47205545406789e+18,
                    1.472055454077479e+18,
                    1.4720554540890202e+18,
                    1.472055454097763e+18,
                    1.4720554541097262e+18,
                    1.4720554541178284e+18,
                    1.4720554541210652e+18,
                    1.4720554541267466e+18,
                    1.4720554541326948e+18,
                    1.4720554574138342e+18,
                    1.4720554574191864e+18,
                    1.4720554574252508e+18,
                    1.472055457434548e+18,
                    1.4720554574406195e+18,
                    1.4720554574469294e+18,
                    1.4720554574551488e+18,
                    1.4720554574621322e+18,
                    1.4720554574748209e+18,
                    1.4720554574840207e+18,
                    1.4720554574863258e+18,
                    1.4720554574889567e+18,
                    1.4720554574940908e+18,
                    1.4720555775004933e+18,
                    1.4720556856719204e+18,
                    1.4720556856758362e+18,
                    1.472055685682941e+18,
                    1.4720556856861215e+18,
                    1.472055685693009e+18,
                    1.4720556856989445e+18,
                    1.4720556857041055e+18,
                    1.4720556857094953e+18,
                    1.4720556857162954e+18,
                    1.472055685725952e+18,
                    1.472055685731142e+18,
                    1.4720556857360402e+18,
                    1.4720556857448998e+18,
                    1.4720556857471278e+18,
                    1.4720556857495547e+18,
                    1.4720556857550185e+18,
                    1.4720557297057544e+18,
                    1.4720557297102715e+18,
                    1.4720557297191176e+18,
                    1.472055729727049e+18,
                    1.4720557297365745e+18,
                    1.4720557297444572e+18,
                    1.472055729754049e+18,
                    1.4720557297603686e+18,
                    1.4720557297678262e+18,
                    1.472055729777839e+18,
                    1.4720557297804836e+18,
                    1.4720557297840515e+18,
                    1.4720557297973466e+18,
                    1.4720558665688878e+18,
                    1.472055876739626e+18,
                    1.4720559211293614e+18,
                    1.4720559211343224e+18,
                    1.472055921139997e+18,
                    1.4720559211485427e+18,
                    1.4720559211593674e+18,
                    1.4720559211631278e+18,
                    1.4720559211743114e+18,
                    1.472055921180805e+18,
                    1.4720559211872955e+18,
                    1.4720559211919619e+18,
                    1.4720559211966538e+18,
                    1.4720559212035553e+18,
                    1.4720559212084188e+18,
                    1.4720559212115722e+18,
                    1.4720559212137887e+18,
                    1.4720559212189647e+18,
                    1.4720559212315167e+18,
                    1.4720559598281464e+18,
                    1.4720559598337574e+18,
                    1.4720559598446385e+18,
                    1.4720559598547236e+18,
                    1.4720559598626944e+18,
                    1.472055959875059e+18,
                    1.472055959887661e+18,
                    1.4720559598961656e+18,
                    1.4720559599086546e+18,
                    1.4720559599183421e+18,
                    1.4720559599243215e+18,
                    1.472055959927182e+18,
                    1.472055959931753e+18,
                    1.47205595993978e+18,
                    1.4720560799487258e+18,
                    1.4720561066777687e+18,
                    1.4720561066826747e+18,
                    1.472056106688003e+18,
                    1.472056106692349e+18,
                    1.4720561067002545e+18,
                    1.4720561067061402e+18,
                    1.472056106710458e+18,
                    1.4720561067167245e+18,
                    1.4720561067216438e+18,
                    1.4720561067259876e+18,
                    1.4720561067346665e+18,
                    1.4720561067406738e+18,
                    1.4720561067463775e+18,
                    1.4720561067483236e+18,
                    1.4720561067509343e+18,
                    1.4720561067566246e+18,
                    1.4720561400079583e+18,
                    1.4720561400119194e+18,
                    1.4720561400185283e+18,
                    1.4720561400250772e+18,
                    1.4720561400351882e+18,
                    1.4720561400442445e+18,
                    1.4720561400504714e+18,
                    1.4720561400670134e+18,
                    1.4720561400740163e+18,
                    1.4720561400820347e+18,
                    1.472056140098047e+18,
                    1.4720561401004337e+18,
                    1.4720561401089715e+18,
                    1.4720561401192625e+18,
                    1.4720562532700526e+18,
                    1.4720562532747205e+18,
                    1.472056253281327e+18,
                    1.472056253287658e+18,
                    1.4720562532943409e+18,
                    1.472056253301134e+18,
                    1.472056253305179e+18,
                    1.4720562533109356e+18,
                    1.4720562533154614e+18,
                    1.4720562533231148e+18,
                    1.4720562533275617e+18,
                    1.472056253332507e+18,
                    1.4720562533348918e+18,
                    1.4720562533379187e+18,
                    1.4720562533436032e+18,
                    1.4720562746330737e+18,
                    1.4720562746378038e+18,
                    1.4720562746448225e+18,
                    1.4720562746544965e+18,
                    1.4720562746582382e+18,
                    1.4720562746658355e+18,
                    1.4720562746728968e+18,
                    1.4720562746843602e+18,
                    1.472056274691259e+18,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "PauseNs": [
                    659992,
                    480271,
                    459936,
                    305355,
                    927384,
                    2.956444e+06,
                    1.407766e+06,
                    2.378583e+06,
                    1.14271e+06,
                    354217,
                    503435,
                    1.717309e+06,
                    458746,
                    374608,
                    318309,
                    427118,
                    424386,
                    1.621504e+06,
                    498439,
                    3.940309e+06,
                    1.448486e+06,
                    1.355399e+06,
                    468538,
                    462893,
                    441929,
                    469686,
                    439857,
                    495055,
                    2.768425e+06,
                    372873,
                    523030,
                    448754,
                    329700,
                    673838,
                    449802,
                    310577,
                    1.218704e+06,
                    1.349067e+06,
                    1.340282e+06,
                    749961,
                    276916,
                    325842,
                    380331,
                    210152,
                    370945,
                    384366,
                    3.400214e+06,
                    329537,
                    388306,
                    1.464966e+06,
                    1.769275e+06,
                    2.361209e+06,
                    374002,
                    4.469448e+06,
                    171357,
                    585894,
                    339856,
                    2.299317e+06,
                    3.364857e+06,
                    1.480109e+06,
                    357977,
                    2.666619e+06,
                    336355,
                    365158,
                    324513,
                    434716,
                    329702,
                    1.114447e+06,
                    1.422481e+06,
                    1.438706e+06,
                    3.589177e+06,
                    488129,
                    590537,
                    271519,
                    5.76546e+06,
                    2.568728e+06,
                    2.343542e+06,
                    3.786401e+06,
                    5.00368e+06,
                    465779,
                    7.734905e+06,
                    321617,
                    5.801847e+06,
                    1.496203e+06,
                    3.418867e+06,
                    2.195654e+06,
                    5.139401e+06,
                    414148,
                    726318,
                    324307,
                    316842,
                    427083,
                    286596,
                    434923,
                    464068,
                    406050,
                    383988,
                    275057,
                    428048,
                    4.742285e+06,
                    1.305529e+06,
                    1.440026e+06,
                    363851,
                    286350,
                    314839,
                    311140,
                    437428,
                    409600,
                    1.226971e+06,
                    347042,
                    460569,
                    495909,
                    2.527057e+06,
                    4.846163e+06,
                    1.415649e+06,
                    7.286847e+06,
                    752614,
                    750401,
                    499771,
                    220915,
                    475362,
                    386409,
                    393665,
                    388816,
                    321817,
                    308031,
                    522623,
                    327256,
                    1.468064e+06,
                    1.577037e+06,
                    1.499489e+06,
                    372767,
                    177899,
                    363880,
                    645189,
                    309870,
                    367645,
                    364787,
                    368407,
                    455625,
                    594104,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "PauseTotalNs": 1.69009822e+08,
                  "StackInuse": 491520,
                  "StackSys": 491520,
                  "Sys": 1.0393848e+07,
                  "TotalAlloc": 1.79980848e+08
                }
              }
/sys/admin/pending:
  post:
    description: |
      Get or set the max number of pending requests
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "max": {"type":"string","description":"Optional new maximum"}
            }
          }
        example: |
          {
            "uri": "/sys/admin/pending"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "max": 0,
                "maxed": false,
                "pending": 1
              }
/sys/admin/connstates:
  post:
    description: |
      See the connection state counts
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/admin/connstates"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "active": 347,
                "closed": 15,
                "idle": 346,
                "new": 16
              }
/sys/admin/gc:
  post:
    description: |
      Run the garbage collector
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/admin/gc"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "okay"
              }
/sys/admin/freemem:
  post:
    description: |
      Maybe return memory to the OS
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/admin/freemem"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "okay"
              }
/sys/admin/gcpercent:
  post:
    description: |
      Set the GC trigger threshold
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
              "percent": {"type":"string","description":"Percentage threshold"}
            }
          }
        example: |
          {
            "percent": "70",
            "uri": "/sys/admin/gcpercent"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "now": 70,
                "status": "okay",
                "was": 70
              }
/sys/stats:
  post:
    description: |
      Get basic system metrics
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/sys/stats"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "ActionExecs": 0,
                "AddFacts": 10,
                "AddRules": 10,
                "ErrorCount": 0,
                "GetEventHistorys": 0,
                "GetFacts": 0,
                "GetRules": 0,
                "ListLocations": 0,
                "ListRules": 10,
                "NewLocations": 3,
                "ProcessEvents": 10,
                "RemFacts": 0,
                "RemRules": 10,
                "SearchFacts": 10,
                "SearchRules": 0,
                "TotalCalls": 169,
                "TotalTime": 2.16288144e+08,
                "UpdateRules": 0
              }
/health/shallow:
  post:
    description: |
      Ping
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/health/shallow"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "good"
              }
/health/deep:
  post:
    description: |
      Somewhat deep health check
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/health/deep"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "good"
              }
/health/deeper:
  post:
    description: |
      Deeper health check, which checks storage
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-03/schema",
            "type": "object",
            "properties": {
            }
          }
        example: |
          {
            "uri": "/health/deeper"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "status": "good"
              }
